// Generated by gencpp from file interface/RobotControl.msg
// DO NOT EDIT!


#ifndef INTERFACE_MESSAGE_ROBOTCONTROL_H
#define INTERFACE_MESSAGE_ROBOTCONTROL_H

#include <ros/service_traits.h>


#include <interface/RobotControlRequest.h>
#include <interface/RobotControlResponse.h>


namespace interface
{

struct RobotControl
{

typedef RobotControlRequest Request;
typedef RobotControlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RobotControl
} // namespace interface


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::interface::RobotControl > {
  static const char* value()
  {
    return "06190d94b32e42f9d6491ffb2f6939f0";
  }

  static const char* value(const ::interface::RobotControl&) { return value(); }
};

template<>
struct DataType< ::interface::RobotControl > {
  static const char* value()
  {
    return "interface/RobotControl";
  }

  static const char* value(const ::interface::RobotControl&) { return value(); }
};


// service_traits::MD5Sum< ::interface::RobotControlRequest> should match 
// service_traits::MD5Sum< ::interface::RobotControl > 
template<>
struct MD5Sum< ::interface::RobotControlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::interface::RobotControl >::value();
  }
  static const char* value(const ::interface::RobotControlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::interface::RobotControlRequest> should match 
// service_traits::DataType< ::interface::RobotControl > 
template<>
struct DataType< ::interface::RobotControlRequest>
{
  static const char* value()
  {
    return DataType< ::interface::RobotControl >::value();
  }
  static const char* value(const ::interface::RobotControlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::interface::RobotControlResponse> should match 
// service_traits::MD5Sum< ::interface::RobotControl > 
template<>
struct MD5Sum< ::interface::RobotControlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::interface::RobotControl >::value();
  }
  static const char* value(const ::interface::RobotControlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::interface::RobotControlResponse> should match 
// service_traits::DataType< ::interface::RobotControl > 
template<>
struct DataType< ::interface::RobotControlResponse>
{
  static const char* value()
  {
    return DataType< ::interface::RobotControl >::value();
  }
  static const char* value(const ::interface::RobotControlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // INTERFACE_MESSAGE_ROBOTCONTROL_H
