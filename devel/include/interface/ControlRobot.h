// Generated by gencpp from file interface/ControlRobot.msg
// DO NOT EDIT!


#ifndef INTERFACE_MESSAGE_CONTROLROBOT_H
#define INTERFACE_MESSAGE_CONTROLROBOT_H

#include <ros/service_traits.h>


#include <interface/ControlRobotRequest.h>
#include <interface/ControlRobotResponse.h>


namespace interface
{

struct ControlRobot
{

typedef ControlRobotRequest Request;
typedef ControlRobotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ControlRobot
} // namespace interface


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::interface::ControlRobot > {
  static const char* value()
  {
    return "681989edb1f8dcc80f4d6c0444e90e5f";
  }

  static const char* value(const ::interface::ControlRobot&) { return value(); }
};

template<>
struct DataType< ::interface::ControlRobot > {
  static const char* value()
  {
    return "interface/ControlRobot";
  }

  static const char* value(const ::interface::ControlRobot&) { return value(); }
};


// service_traits::MD5Sum< ::interface::ControlRobotRequest> should match 
// service_traits::MD5Sum< ::interface::ControlRobot > 
template<>
struct MD5Sum< ::interface::ControlRobotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::interface::ControlRobot >::value();
  }
  static const char* value(const ::interface::ControlRobotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::interface::ControlRobotRequest> should match 
// service_traits::DataType< ::interface::ControlRobot > 
template<>
struct DataType< ::interface::ControlRobotRequest>
{
  static const char* value()
  {
    return DataType< ::interface::ControlRobot >::value();
  }
  static const char* value(const ::interface::ControlRobotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::interface::ControlRobotResponse> should match 
// service_traits::MD5Sum< ::interface::ControlRobot > 
template<>
struct MD5Sum< ::interface::ControlRobotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::interface::ControlRobot >::value();
  }
  static const char* value(const ::interface::ControlRobotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::interface::ControlRobotResponse> should match 
// service_traits::DataType< ::interface::ControlRobot > 
template<>
struct DataType< ::interface::ControlRobotResponse>
{
  static const char* value()
  {
    return DataType< ::interface::ControlRobot >::value();
  }
  static const char* value(const ::interface::ControlRobotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // INTERFACE_MESSAGE_CONTROLROBOT_H
